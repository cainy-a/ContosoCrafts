@using Microsoft.AspNetCore.Components.Web
@using ContosoCrafts.Website.Models
@using ContosoCrafts.Website.Services
@inject JsonFileProductService ProductService
<!-- Programatically Generate Cards -->
<div class="card-columns">
    @foreach (var product in ProductService.GetProducts())
    {
        <div class="card">
            <div class="card-img" style="background-image: url('@product.Image');"></div>
            <div class="card-body">
                <h5 class="card-title">@product.Title</h5>
            </div>
            <div class="card-footer">
                <small class="text-muted">
                    <button @onclick="e => SelectProduct(product.Id)"
                            data-toggle="modal" data-target="#productModal" class="btn btn-primary">
                        More Info
                    </button>
                </small>
            </div>
        </div>
    }
</div>

<!-- Reference Font-Awesome so we can use their star icon for the ratings system -->
<link rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<!-- Popup window -->
<div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="productTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            @if (_selectedProduct != null)
            {
                <div class="modal-header">
                    <h5 class="modal-title" id="productTitle">@_selectedProduct.Title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="card">
                        <div class="card-img" style="background-image: url('@_selectedProduct.Image');">
                        </div>
                        <div class="card-body">
                            <p class="card-text">@_selectedProduct.Description</p>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    @if (_voteCount == 0)
                    {
                        <span>Be the first to vote!</span>
                    }
                    else
                    {
                        <span>@_voteCount @_voteLabel</span>
                    }

                    @for (int i = 0; i < 5; i++)
                    {
                        var currentStar = i;
                        if (i <= _currentRating)
                        {
                            <span class="fa-star fa checked"
                                  @onclick="e => SubmitRating(currentStar)"></span>
                        }
                        else
                        {
                            <span class="fa-star fa"
                                  @onclick="e => SubmitRating(currentStar)"></span>
                        }
                    }
                </div>
            }
        </div>
    </div>
</div>

@code {
    Product _selectedProduct;
    string _selectedProductId;

    void SelectProduct(string productId)
    {
        _selectedProductId = productId;
        _selectedProduct = ProductService.GetProducts().First(e => e.Id == productId);
        GetCurrentRating(); // update the ratings
    }

    int _currentRating = 0;
    int _voteCount = 0;
    string _voteLabel;

    void GetCurrentRating()
    {
        if (_selectedProduct.Ratings == null)
        {
            _currentRating = 0;
            _voteCount = 0;
        } // if there are no ratings, set it to 0
        else
        {
            _voteCount = _selectedProduct.Ratings.Length; // update the amount of votes
            _voteLabel = _voteCount > 1 ? "Votes" : "Vote"; // select the correct suffix
            _currentRating = _selectedProduct.Ratings.Sum() / _voteCount; // set the rating to the average of all ratings.
        }
    }

    void SubmitRating(int rating)
    {
        ProductService.AddRating(_selectedProductId, rating);
        SelectProduct(_selectedProductId); // update display
    }

}